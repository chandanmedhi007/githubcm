pipeline {
  agent {
    docker {
      image 'abhishekf5/maven-abhishek-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
    }
  }
  stages {
    stage('Checkout') {
      steps {
        sh 'echo passed'
        //git branch: 'main', url: 'https://github.com/chandanmedhi007/githubcm.git'
      }
    }
    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        // build the project and create a JAR file
        sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
      }
    }
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://172.22.6.124:9000"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
    stage('Build and Push Docker Image') {
    environment {
        AZURE_CREDENTIALS = credentials('7814b8ca-09ee-4109-949c-f779d541aedb')  // Azure Service Principal credentials ID
        ACR_NAME = 'linuxappcr'  // Azure Container Registry name
        DOCKER_IMAGE_TAG = "${env.BUILD_NUMBER}"  // Using build number as the Docker image tag
        DOCKERFILE_PATH = 'java-maven-sonar-argocd-helm-k8s/spring-boot-app/Dockerfile'  // Path to your Dockerfile
    }
    
    steps {
        script {
            def acrLogin = azureLogin(credentialsId: "${AZURE_CREDENTIALS}", useAgent: true)
            docker.withRegistry("https://${ACR_NAME}.azurecr.io", "${acrLogin}") {
                def customImage = docker.build("${ACR_NAME}/${env.JOB_NAME}:${DOCKER_IMAGE_TAG}", "${DOCKERFILE_PATH}")
                customImage.push()
            }
        }
    }
    stage('Update Deployment File') {
        environment {
            GIT_REPO_NAME = "githubcm"
            GIT_USER_NAME = "chandanmedhi007"
        }
        steps {
            withCredentials([string(credentialsId: 'git', variable: 'GITHUB_TOKEN')]) {
                sh '''
                    git config user.email "chandanmedhi@gmail.com"
                    git config user.name "chandanmedhi007"
                    BUILD_NUMBER=${BUILD_NUMBER}
                    sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                    git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                '''
            }
        }
    }
  }
}
